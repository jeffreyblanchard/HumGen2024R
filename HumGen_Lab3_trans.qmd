---
title: 'Lab 3 : Data Transformation with dplyr'
---

## Learning objectives

-   Data Transformation using dplyr

## Load libaries

```{r}
library(tidyverse)
library(nycflights13)
```


## Introduction to Data Transformation

### Tables

How they are displayed in your qmd file is different from how they are rendered into a html, pdf and other files.  

### Pipes 

In the last few years `|>` pipe was introduced as a simpler alternative to the `%>%` pipe that has been used in R and Tidyverse for the last 10 years. In many online examples you will see the `%>%` used. For many uses in this class they are interchangeable. 

Ctrl/Cmd + Shift + M.

Ctrl + Alt + I

### Checking each line of codes are you write it

Today we will see in Chapter 4 the following code chunk

```{r}
flights |>
  filter(dest == "IAH") |> 
  group_by(year, month) |> 
  summarize(
    arr_delay = mean(arr_delay, na.rm = TRUE)
  )
```

If I was writing the code I would check each line as a wrote it to make sure I was getting the right result and to simplify trouble shooting error messages

```{r}
flights |>
  filter(dest == "IAH") 
```

```{r}
flights |>
  filter(dest == "IAH") |> 
  group_by(year, month)
```

```{r}
flights |>
  filter(dest == "IAH") |> 
  group_by(year, month) |> 
  summarize(
    arr_delay = mean(arr_delay, na.rm = TRUE)
  )
```
### Assignment

In the first lab with went over assignment of a number or a character sting to a variable

x <- 2

We can assign this to a new variable `IAH_arr_delay_by_month`

```{r}
IAH_arr_delay_by_month <- flights |>
  filter(dest == "IAH") |> 
  group_by(year, month) |> 
  summarize(
    arr_delay = mean(arr_delay, na.rm = TRUE)
  )
```

Notice that nothing prints out. The new table is put in the data object `IAH_arr_delay_by_month`. Now you could use this object repeatedly in your code without running the larger code chunck above each time. You can view `IAH_arr_delay_by_month` by using view(IAH_arr_delay_by_month) or clicking on the object in the `Environment` window.

### Writing pseudo code

Was there a flight on every month of 2013?

Before writing any code it is best to break this down into the tasks we need to accomplish

1. filter flight data set to the year 2013
2. show only 1 row for each month 
3. display table to see if each month is present or count to see if rows equal 12

This is actually the hard part of solving a coding challenge. Writing the codes is relatively easy when you know the steps

```{r}
flights |> 
  filter(year == 2013) |> 
  distinct(month)
```

## Exercises

[R for Data Science Chapter 1](https://r4ds.hadley.nz/data-transform). 

Today we will walk through Chapter 3 Data Transformation in R for Data Science. As we did last week, by putting the examples and exercises in our own Quarto Markdown file, we can create own personal path through the Chapter. 


### What to upload to Canvas

After you `Render` the qmd file to an html file, export the file to your computer and upload it to Canvas.
